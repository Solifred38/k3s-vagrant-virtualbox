Vagrant.configure("2") do |config|
  config.vm.box = "generic/alpine319"
  config.vm.hostname = "k3s-master"
  config.vm.network "public_network"

  config.vm.provider "virtualbox" do |vb|
    vb.memory = 8000
    vb.cpus = 2
  end

  config.vm.provision "shell", inline: <<-SHELL
    set -eux
    echo "utilisation de vagrantfile.nodeport"
    apk update
    apk add bash curl coreutils sudo openrc iproute2 e2fsprogs tcpdump wget tar

    echo "nameserver 8.8.8.8" > /etc/resolv.conf
    chattr +i /etc/resolv.conf

    while ! ip addr show eth1 | grep -q 'inet '; do sleep 1; done
    MASTER_IP=$(ip addr show eth1 | grep 'inet ' | awk '{print $2}' | cut -d/ -f1)

    if ! ip route | grep -q '^default'; then
      GATEWAY=$(ip route | grep -m1 'default' | awk '{print $3}')
      ip route add default via ${GATEWAY} dev eth1 || true
    fi

    curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="--tls-san ${MASTER_IP}" sh -

    until [ -f /etc/rancher/k3s/k3s.yaml ]; do
      echo "⏳ En attente de /etc/rancher/k3s/k3s.yaml..."
      sleep 2
    done

    sudo chown vagrant:vagrant /etc/rancher/k3s/k3s.yaml
    echo 'export KUBECONFIG=/etc/rancher/k3s/k3s.yaml' >> /etc/profile
    echo 'alias k=kubectl'>>/etc/profile
    export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
    sed -i "s/127.0.0.1/${MASTER_IP}/g" /etc/rancher/k3s/k3s.yaml

    HELM_VERSION="v3.14.0"
    wget https://get.helm.sh/helm-${HELM_VERSION}-linux-amd64.tar.gz
    tar -zxvf helm-${HELM_VERSION}-linux-amd64.tar.gz
    mv linux-amd64/helm /usr/local/bin/helm
    rm -rf linux-amd64 helm-${HELM_VERSION}-linux-amd64.tar.gz

    kubectl create namespace jenkins || true

    cat <<EOF | kubectl apply -f -
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-pvc
  namespace: jenkins
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
EOF

    cat <<EOF > /tmp/jenkins-values.yaml
controller:
  serviceType: NodePort
  servicePort: 8080
  admin:
    username: admin
    password: monmotdepassefort
  startupProbe:
    enabled: false
  nodePort: 32000

persistence:
  enabled: true
  existingClaim: jenkins-pvc
  mountPath: /var/jenkins_home
EOF

    helm repo add jenkins https://charts.jenkins.io
    helm repo update
    helm install myjenkins jenkins/jenkins --namespace jenkins -f /tmp/jenkins-values.yaml || true

    echo "✅ Jenkins exposé sur ${MASTER_IP}:32000 — testable depuis ton hôte et ton LAN"
  SHELL
end