Vagrant.configure("2") do |config|
  config.vm.box = "generic/alpine319"
  config.vm.hostname = "k3s-master"

  # Réseau host-only avec IP fixe, accessible depuis l'hôte
  config.vm.network "private_network", ip: "192.168.56.210"

  config.vm.provider "virtualbox" do |vb|
    vb.memory = 10000
    vb.cpus = 2
  end

  config.vm.provision "shell", inline: <<-SHELL
    set -eux

    apk update
    apk add bash curl coreutils sudo openrc iproute2

    # Fix DNS et empêcher sa réécriture
    echo "nameserver 8.8.8.8" > /etc/resolv.conf
    apk add e2fsprogs
    chattr +i /etc/resolv.conf

    # Fix route par défaut si absente
    if ! ip route | grep -q '^default'; then
      ip route add default via 192.168.56.1 dev eth1 || true
    fi

    MASTER_IP="192.168.56.210"

    curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="--tls-san ${MASTER_IP}" sh -

    until [ -f /etc/rancher/k3s/k3s.yaml ]; do
      echo "⏳ En attente de /etc/rancher/k3s/k3s.yaml..."
      sleep 2
    done

    sudo chown vagrant:vagrant /etc/rancher/k3s/k3s.yaml
    echo 'export KUBECONFIG=/etc/rancher/k3s/k3s.yaml' >> /etc/profile
    export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
    sed -i "s/127.0.0.1/${MASTER_IP}/g" /etc/rancher/k3s/k3s.yaml

    curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

    helm repo add metallb https://metallb.github.io/metallb
    helm repo update
    helm install metallb metallb/metallb --namespace metallb-system --create-namespace

    until kubectl get endpoints metallb-webhook-service -n metallb-system -o jsonpath='{.subsets[*].addresses[*].ip}' | grep -q .; do
      echo "⏳ En attente du webhook MetalLB..."
      sleep 2
    done

    cat <<EOF | kubectl apply -f -
apiVersion: metallb.io/v1beta1
kind: IPAddressPool
metadata:
  name: my-ip-pool
  namespace: metallb-system
spec:
  addresses:
  - 192.168.56.210-192.168.56.220
---
apiVersion: metallb.io/v1beta1
kind: L2Advertisement
metadata:
  name: l2adv
  namespace: metallb-system
spec:
  ipAddressPools:
  - my-ip-pool
EOF

    kubectl create namespace jenkins || true

    cat <<EOF | kubectl apply -f -
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-pvc
  namespace: jenkins
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
EOF

    cat <<EOF > /tmp/jenkins-values.yaml
controller:
  serviceType: LoadBalancer
  servicePort: 8080
  admin:
    username: admin
    password: monmotdepassefort
  serviceAnnotations:
    metallb.universe.tf/address-pool: "my-ip-pool"
  startupProbe:
    enabled: false

persistence:
  enabled: true
  existingClaim: jenkins-pvc
  mountPath: /var/jenkins_home
EOF

    helm repo add jenkins https://charts.jenkins.io
    helm repo update
    helm install myjenkins jenkins/jenkins --namespace jenkins -f /tmp/jenkins-values.yaml || true
  SHELL
end